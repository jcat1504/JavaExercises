LinkedList<String> linkedlist = new LinkedList<String>();

linkedlist.push("A");
linkedlist.push("B");
linkedlist.push("C");
linkedlist.push("D");
linkedlist.push("F");

//You can treat this as a Queue
linkedlist.offer("A");
linkedlist.offer("B");
linkedlist.offer("C");
linkedlist.offer("D");
linkedlist.offer("F");
//[A, B, C, D, F]
//linkedlist.poll(); removes head

linkedlist.add(4, "E");
linkedlist.remove("E");
System.out.println(linkedlist.indexOf("F"); //searching for elements is easy

System.out.println(linkedlist.peekFirst()); //peeks and returns head
System.out.println(linkedlist.peekLast()); //peeks and returns tail

linkedlist.addFirst("0"); //adds first element aka new Head
linkedlist.addLast("G"); //adds last element aka new Tail!

//You can also store elements in a variable as such:
String first = linkedlist.removeFirst(); //head is stored in 'first' variable
String last = linkedlist.removeLast(); //tail is stored in 'last' variable
System.out.println(linkedlist);
}